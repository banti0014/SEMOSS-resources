[
    {
        "label": "Choose Filters",
        "query": "UnfilterFrame(); SetFrameFilter((County_Name_Masked==[<County>])); SetFrameFilter((Risk_Adjusted_Modified>=<RiskScore>)); if(<PregancyScore>, (SetFrameFilter(Pregnancy_Score == \"TRUE\");PregnancyScore = true;), (UnfilterFrame(Pregnancy_Score); PregnancyScore = false;));if(<HousingInsecurity>, (SetFrameFilter(Home_Insecurity_Score == \"TRUE\"); HousingInsecurity = true;), (UnfilterFrame(Home_Insecurity_Score); HousingInsecurity = false;));if(<UninsuredValue>, (SetFrameFilter(Uninsured_Score == \"TRUE\"); UninsuredValue = true;), (UnfilterFrame(Uninsured_Score); UninsuredValue = false;));if(<ChildrenIndicator>, (SetFrameFilter(Current_Children_Score == \"TRUE\");ChildrenIndicator = true;), (UnfilterFrame(Current_Children_Score); ChildrenIndicator = false;));",
        "listeners": [
            "updateTask"
        ],
        "params": [
			{
                "paramName": "County",
                "view": {
                    "displayType": "checklist",
                    "attributes": {
                        "multiple": true,
                        "quickselect": true,
                        "searchable": true
                    }
                },
                "model": {
                    "query": "Database ( database = [ \"55cbdc2d-540a-44b6-8de2-9c6cddf2b446\" ] ) | Select ( scored_combined_11Mar19__County_Name_Masked ) | Sort ( columns = [ scored_combined_11Mar19__County_Name_Masked ] , sort = [ \"asc\" ] ) | Filter (scored_combined_11Mar19__STATE_1 == [\"Georgia\"]) | CollectAll();",
                    "valueQuery": "Select ( County_Name_Masked ) | CollectAll();"
                },
                "required": false,
                "link": "instance"
            },
            {
                "paramName": "PregancyScore",
                "view": {
                    "label": "Filter by population criteria:",
                    "displayType": "checkbox",
                    "attributes": {
                        "label": "Likely Pregnant",
                        "direction": "left"
                    }
                },
                "model": {
                    "defaultValue": "false",
                    "valueQuery": "if((VariableExists(\"PregnancyScore\") AND PregnancyScore), true, false);"
                },
                "required": false
            },
            {
                "paramName": "ChildrenIndicator",
                "view": {
                    "displayType": "checkbox",
                    "attributes": {
                        "direction": "left",
                        "label": "Children Present in Household"
                    }
                },
                "model": {
                    "defaultValue": "false",
                    "valueQuery": "if((VariableExists(\"ChildrenIndicator\") AND ChildrenIndicator), true, false);"
                },
                "required": false
            },
            {
                "paramName": "UninsuredValue",
                "view": {
                    "displayType": "checkbox",
                    "attributes": {
                        "direction": "left",
                        "label": "Uninsured"
                    }
                },
                "model": {
                    "defaultValue": "false",
                    "valueQuery": "if((VariableExists(\"UninsuredValue\") AND UninsuredValue), true, false);"
                },
                "required": false
            },
            {
                "paramName": "HousingInsecurity",
                "view": {
                    "displayType": "checkbox",
                    "attributes": {
                        "direction": "left",
                        "label": "Insecure Housing"
                    }
                },
                "model": {
                    "defaultValue": "false",
                    "valueQuery": "if((VariableExists(\"HousingInsecurity\") AND HousingInsecurity), true, false);"
                },
                "required": false
            },
            {
                "paramName": "RiskScore",
                "view": {
                    "displayType": "number",
                    "label": "Population minimum risk score (0-200):",
                    "attributes": {
                        "multiple": false 
                    }
                },
                "model": {
                    "defaultValue": 0,
					"min": 0,
					"max": 100,
					"valueQuery": "Select (round(Min(Risk_Adjusted_Modified), noname=[0])) | Iterate() | GrabScalarElement();"
				},
                "required": false
            }
        ],
        "execute": "button"
    }
]